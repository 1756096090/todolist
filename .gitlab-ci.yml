stages:
  - build
  - test
  - code_quality
  - packing
  - deploy



cache:
  paths:
    - build/libs



build-job:
  stage: build
  image: gradle:jdk17
  script:
    - echo "Setting permissions for gradlew..."
    - chmod +x gradlew
    - echo "Compiling the code..."
    - ./gradlew clean build
    - echo "Compile complete."
  artifacts:
    paths:
      - build/libs/ToDoList-0.0.1-SNAPSHOT.jar

unit-test-job:
  stage: test
  image: gradle:jdk17
  script:
    - echo "Setting permissions for gradlew..."
    - chmod +x ./gradlew
    - echo "Running unit tests..."
    - ./gradlew test
  artifacts:
    paths:
      - build/test-results/test/
    reports:
      junit: build/test-results/test/TEST-*.xml

integration-test-job:
  stage: test
  script:
    - echo "Running integration tests."

code_quality-job:
  image: gradle:jdk17
  stage: code_quality
  script:
    - echo "Ejecutando análisis de calidad de código con Checkstyle"
    - ./gradlew checkstyleMain checkstyleTest
  artifacts:
    paths:
      - build/reports/checkstyle


packing-job:
  stage: packing
  image: gradle:jdk17
  before_script:
    - apk update && apk add --no-cache openssh-client
  script:
    - echo "Adjusting key permissions..."
    - chmod 600 "/builds/metodologia-de-desarrollo/todolist.tmp/AWS_KEY"
    - echo "Connecting to EC2 to copy the new version of the application..."
    - scp -o StrictHostKeyChecking=no -i "/builds/metodologia-de-desarrollo/todolist.tmp/AWS_KEY" build/libs/ToDoList-0.0.1-SNAPSHOT.jar ec2-user@18.119.122.90:/home/ec2-user/ToDoList/api.jar




deploy-job:
  image: gradle:jdk17
  stage: deploy
  before_script:
    - apk update && apk add --no-cache openssh-client
  script:
    - echo "Ajustando los permisos de la clave"
    - chmod 600 "/builds/metodologia-de-desarrollo/todolist.tmp/AWS_KEY"
    - echo "Conectando a EC2 para desplegar la aplicación"

    # Verificación de la transferencia del archivo JAR
    - echo "Verificando si el archivo fue transferido correctamente"
    - ssh -o StrictHostKeyChecking=no -i "/builds/metodologia-de-desarrollo/todolist.tmp/AWS_KEY" ec2-user@18.119.122.90 "ls /home/ec2-user/ToDoList/api.jar"

    # Detener cualquier instancia previa de la API en ejecución
    - echo "Deteniendo cualquier instancia previa de la API en ejecución"
    - nohup ssh -vvv -o StrictHostKeyChecking=no -i "/builds/metodologia-de-desarrollo/todolist.tmp/AWS_KEY" ec2-user@18.119.122.90 "nohup pkill -f 'java -jar' > /dev/null 2>&1 &"

    # Ejecutar la nueva versión en segundo plano
    - echo "Ejecutando la nueva versión en segundo plano"
    - nohup ssh -vvv -o StrictHostKeyChecking=no -i "/builds/metodologia-de-desarrollo/todolist.tmp/AWS_KEY" ec2-user@18.119.122.90 "nohup java -jar /home/ec2-user/ToDoList/api.jar > /dev/null 2>&1 &"

  environment: production
